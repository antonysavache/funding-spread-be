import { Injectable } from '@nestjs/common';
import { Observable, of, from } from 'rxjs';
import { map, catchError, timeout } from 'rxjs/operators';
import axios from 'axios';
import { BybitAdapter, BybitTickerResponse } from '../adapters/bybit.adapter';
import { NormalizedTicker } from '../adapters/normalized-ticker.interface';

@Injectable()
export class BybitService {
  private readonly baseUrl = 'https://api.bybit.com';
  private readonly tickerEndpoint = '/v5/market/tickers';

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ funding rates —Å Bybit
   */
  getFundingData(): Observable<{ [ticker: string]: NormalizedTicker }> {
    console.log('üîÑ Bybit: –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö...');

    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ ticker –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç funding rate
    return this.getTickerData().pipe(
      map(ticker => {
        console.log('üì• Bybit: –ü–æ–ª—É—á–µ–Ω—ã ticker –¥–∞–Ω–Ω—ã–µ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:', ticker.length);

        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ USDT –ø–µ—Ä–ø–µ—Ç—É–∞–ª—ã
        const filteredTickers = BybitAdapter.filterUsdtPerpetuals(ticker);
        console.log('üîç Bybit: –ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ USDT:', filteredTickers.length);

        // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ
        const normalized = BybitAdapter.normalize(filteredTickers);
        const tickers = Object.keys(normalized);
        console.log(`‚úÖ Bybit: –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${tickers.length} —Ç–∏–∫–µ—Ä–æ–≤`);

        // –õ–æ–≥–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤
        tickers.slice(0, 3).forEach(ticker => {
          const data = normalized[ticker];
          console.log(`üìä Bybit ${ticker}: rate=${(data.fundingRate * 100).toFixed(4)}%, price=${data.price}`);
        });

        return normalized;
      }),
      catchError(error => {
        console.error('‚ùå Bybit: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error.message);
        return of({});
      })
    );
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç ticker –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤
   */
  private getTickerData(): Observable<any[]> {
    const url = `${this.baseUrl}${this.tickerEndpoint}?category=linear`;
    console.log('üåê Bybit: –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ticker –¥–∞–Ω–Ω—ã–µ:', url);

    return from(axios.get<BybitTickerResponse>(url, {
      timeout: 15000,
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
        'Accept': 'application/json',
        'Accept-Language': 'en-US,en;q=0.9',
        'Cache-Control': 'no-cache'
      }
    })).pipe(
      timeout(15000),
      map(response => {
        console.log('üì• Bybit: –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç, —Å—Ç–∞—Ç—É—Å:', response.status);
        console.log('üìä Bybit: –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞:', response.data.retCode, '–°–æ–æ–±—â–µ–Ω–∏–µ:', response.data.retMsg);
        
        if (BybitAdapter.isValidResponse(response.data)) {
          console.log('‚úÖ Bybit: –í–∞–ª–∏–¥–Ω—ã–π –æ—Ç–≤–µ—Ç, —Ç–∏–∫–µ—Ä–æ–≤:', response.data.result.list.length);
          return response.data.result.list;
        } else {
          console.warn('‚ö†Ô∏è Bybit: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç ticker API:', response.data);
          return [];
        }
      }),
      catchError(error => {
        console.error('‚ùå Bybit: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è ticker –¥–∞–Ω–Ω—ã—Ö:', {
          message: error.message,
          status: error.response?.status,
          statusText: error.response?.statusText,
          code: error.code
        });
        return of([]);
      })
    );
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API Bybit
   */
  checkApiHealth(): Observable<boolean> {

    const url = `${this.baseUrl}${this.tickerEndpoint}?category=linear&symbol=BTCUSDT`;

    return from(axios.get(url)).pipe(
      timeout(5000),
      map(() => {
        return true;
      }),
      catchError(error => {
        console.error('‚ùå Bybit: API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error);
        return of(false);
      })
    );
  }
}
