import { Injectable, Logger } from '@nestjs/common';
import axios from 'axios';
import { OKXAdapter } from '../adapters/okx.adapter';
import { NormalizedTicker } from '../adapters/normalized-ticker.interface';

@Injectable()
export class OKXService {
  private readonly logger = new Logger(OKXService.name);
  private readonly baseUrl = 'https://www.okx.com';

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å OKX –∏—Å–ø–æ–ª—å–∑—É—è –æ–¥–∏–Ω –∑–∞–ø—Ä–æ—Å –∫ funding-rate endpoint —Å instId=ANY
   */
  async getFundingData(): Promise<{ [ticker: string]: NormalizedTicker }> {
    this.logger.log('üîÑ OKX: –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ funding-rate endpoint —Å instId=ANY...');

    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º funding-rate endpoint —Å instId=ANY –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö —Å—Ä–∞–∑—É
      const url = `${this.baseUrl}/api/v5/public/funding-rate?instId=ANY`;
      
      this.logger.log(`üåê OKX: –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å ${url}`);
      
      const response = await axios.get(url, {
        timeout: 15000,
        headers: {
          'Content-Type': 'application/json',
          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
        }
      });

      if (response.data.code !== '0') {
        throw new Error(`OKX API error: ${response.data.msg}`);
      }

      if (!response.data.data || !Array.isArray(response.data.data)) {
        this.logger.warn('‚ö†Ô∏è OKX: –ü–æ–ª—É—á–µ–Ω –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö:', response.data);
        return {};
      }

      this.logger.log(`üìä OKX: –ü–æ–ª—É—á–µ–Ω–æ ${response.data.data.length} –∑–∞–ø–∏—Å–µ–π –æ—Ç API`);

      // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ
      const fundingData = this.normalizeAllFundingData(response.data.data);
      
      // –û–±–æ–≥–∞—â–∞–µ–º —Ü–µ–Ω–∞–º–∏
      const normalized = await this.enrichWithPrices(fundingData);
      
      const tickers = Object.keys(normalized);
      this.logger.log(`üéØ OKX: –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${tickers.length} —Ç–∏–∫–µ—Ä–æ–≤`);
      
      // –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ funding rates
      if (tickers.length > 0) {
        const sampleTickers = tickers.slice(0, 5);
        sampleTickers.forEach(ticker => {
          const data = normalized[ticker];
          this.logger.log(`üìä OKX ${ticker}: rate=${(data.fundingRate * 100).toFixed(4)}%, price=${data.price}`);
        });
      }

      // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ funding rates
      const nonZeroFunding = tickers.filter(ticker => normalized[ticker].fundingRate !== 0);
      this.logger.log(`üìà OKX: –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å –Ω–µ–Ω—É–ª–µ–≤—ã–º funding rate: ${nonZeroFunding.length} –∏–∑ ${tickers.length}`);

      return normalized;

    } catch (error) {
      this.logger.error('‚ùå OKX: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error.message);
      return {};
    }
  }

  /**
   * –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ funding-rate endpoint
   */
  private normalizeAllFundingData(data: any[]): { [ticker: string]: NormalizedTicker } {
    const result: { [ticker: string]: NormalizedTicker } = {};

    data.forEach((item, index) => {
      try {
        // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å–∏–º–≤–æ–ª –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
        const standardSymbol = this.convertOKXSymbol(item.instId);
        
        if (index < 3) {
          this.logger.log(`üîç OKX: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º ${item.instId} -> ${standardSymbol}`);
          this.logger.log(`üîç OKX: –¥–∞–Ω–Ω—ã–µ:`, {
            fundingRate: item.fundingRate,
            nextFundingTime: item.nextFundingTime,
            instType: item.instType
          });
        }
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ USDT SWAP –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Å –≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        if (
          standardSymbol &&
          standardSymbol.endsWith('USDT') &&
          this.isValidTicker(standardSymbol) &&
          item.instType === 'SWAP' &&
          item.fundingRate !== undefined
        ) {
          
          const fundingRate = parseFloat(item.fundingRate) || 0;
          const nextFundingTime = item.fundingTime ? 
            parseInt(item.fundingTime) : 
            this.calculateNextFundingTime();
          
          // –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å
          // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º placeholder, –ø–æ–∑–∂–µ –¥–æ–±–∞–≤–∏–º mark price
          const price = 0; // –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ø–æ–∑–∂–µ —á–µ—Ä–µ–∑ mark price endpoint
          
          if (index < 3) {
            this.logger.log(`‚úÖ OKX: –¥–æ–±–∞–≤–ª—è–µ–º ${standardSymbol} —Å fundingRate=${fundingRate}`);
          }
          
          result[standardSymbol] = {
            ticker: standardSymbol,
            price: price, // –í—Ä–µ–º–µ–Ω–Ω–æ 0, –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ
            fundingRate: fundingRate,
            nextFundingTime: nextFundingTime
          };
        } else if (index < 3) {
          this.logger.log(`‚ùå OKX: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º ${item.instId} - –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç (type: ${item.instType})`);
        }
      } catch (error) {
        this.logger.warn(`‚ö†Ô∏è OKX: –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ ${index}:`, error.message);
      }
    });

    // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    this.logger.log(`üìä OKX: –ù–∞–π–¥–µ–Ω–æ ${Object.keys(result).length} SWAP –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–±–æ–≥–∞—â–µ–Ω–∏—è —Ü–µ–Ω–∞–º–∏`);
    
    return result;
  }

  /**
   * –û–±–æ–≥–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ü–µ–Ω–∞–º–∏ –∏–∑ mark-price endpoint
   */
  private async enrichWithPrices(fundingData: { [ticker: string]: NormalizedTicker }): Promise<{ [ticker: string]: NormalizedTicker }> {
    try {
      const url = `${this.baseUrl}/api/v5/public/mark-price?instType=SWAP`;
      
      this.logger.log('üåê OKX: –ü–æ–ª—É—á–∞–µ–º mark prices –¥–ª—è –≤—Å–µ—Ö SWAP...');
      
      const response = await axios.get(url, {
        timeout: 15000,
        headers: {
          'Content-Type': 'application/json',
          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
        }
      });

      if (response.data.code !== '0') {
        this.logger.warn(`‚ö†Ô∏è OKX: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω: ${response.data.msg}`);
        return fundingData;
      }

      if (!response.data.data || !Array.isArray(response.data.data)) {
        this.logger.warn('‚ö†Ô∏è OKX: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ mark-price');
        return fundingData;
      }

      this.logger.log(`üìä OKX: –ü–æ–ª—É—á–µ–Ω–æ ${response.data.data.length} mark prices`);

      // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—ã –≤ funding data
      let pricesUpdated = 0;
      response.data.data.forEach(markPrice => {
        const standardSymbol = this.convertOKXSymbol(markPrice.instId);
        
        if (standardSymbol && fundingData[standardSymbol] && markPrice.markPx) {
          fundingData[standardSymbol].price = parseFloat(markPrice.markPx);
          pricesUpdated++;
        }
      });

      this.logger.log(`‚úÖ OKX: –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ü–µ–Ω: ${pricesUpdated} –∏–∑ ${Object.keys(fundingData).length}`);

      // –£–¥–∞–ª—è–µ–º —Ç–∏–∫–µ—Ä—ã –±–µ–∑ —Ü–µ–Ω—ã
      const result: { [ticker: string]: NormalizedTicker } = {};
      Object.entries(fundingData).forEach(([ticker, data]) => {
        if (data.price > 0) {
          result[ticker] = data;
        }
      });

      return result;

    } catch (error) {
      this.logger.error('‚ùå OKX: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ü–µ–Ω:', error.message);
      return fundingData;
    }
  }

  /**
   * –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç OKX —Ñ–æ—Ä–º–∞—Ç —Å–∏–º–≤–æ–ª–∞ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π
   * BTC-USDT-SWAP -> BTCUSDT
   */
  private convertOKXSymbol(okxSymbol: string): string | null {
    if (!okxSymbol) return null;

    // –£–¥–∞–ª—è–µ–º —Å—É—Ñ—Ñ–∏–∫—Å -SWAP –∏ –∑–∞–º–µ–Ω—è–µ–º - –Ω–∞ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
    const cleaned = okxSymbol.replace('-SWAP', '').replace('-', '');
    
    if (cleaned.endsWith('USDT') && cleaned.length > 4) {
      return cleaned;
    }

    return null;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ —Ç–∏–∫–µ—Ä –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ XXXUSDT
   */
  private isValidTicker(ticker: string): boolean {
    const regex = /^[A-Z0-9]+USDT$/;
    return regex.test(ticker) && ticker.length > 4;
  }

  /**
   * –í—ã—á–∏—Å–ª—è–µ—Ç –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–≥–æ funding –¥–ª—è OKX (–∫–∞–∂–¥—ã–µ 8 —á–∞—Å–æ–≤: 00:00, 08:00, 16:00 UTC)
   */
  private calculateNextFundingTime(): number {
    const now = new Date();
    const currentHour = now.getUTCHours();
    let nextFundingHour: number;

    if (currentHour < 8) {
      nextFundingHour = 8;
    } else if (currentHour < 16) {
      nextFundingHour = 16;
    } else {
      nextFundingHour = 24; // 00:00 —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è
    }

    const nextFundingTime = new Date(now);
    nextFundingTime.setUTCHours(nextFundingHour % 24, 0, 0, 0);
    if (nextFundingHour === 24) {
      nextFundingTime.setUTCDate(nextFundingTime.getUTCDate() + 1);
    }

    return nextFundingTime.getTime();
  }
}
